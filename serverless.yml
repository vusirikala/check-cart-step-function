service: check-inventory-step-function
frameworkVersion: '3'
provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1

plugins: 
  - serverless-step-functions
  - serverless-iam-roles-per-function

stepFunctions:
  stateMachines:
    storeCheckoutFlow:
      name: storeCheckoutFlow
      definition:
        StartAt: checkInventory
        States: 
          
          checkInventory:
            Type: Task
            Resource: {"Fn::GetAtt": ["checkInventory", "Arn"]}
            Catch: 
              - ErrorEquals: [BookNotFound]
                Next: BookNotFoundError
              - ErrorEquals: [BookOutOfStock]
                Next: BookOutOfStockError
            Next: calculateTotal

          calculateTotal: 
            Type: Task
            Resource: {"Fn::GetAtt": ["calculateTotal", "Arn"]}
            End: true
          
          BookNotFoundError:
            Type: Pass
            Result: "No such book avaialable"
            End: true

          BookOutOfStockError:
            Type: Pass
            Result: "Sorry, the book is out of stock"
            End: true
          
functions:
  checkInventory:
    handler: functions/checkInventory.handler
    iamRoleStatements:
      - Effect: Allow
        Resource: {"Fn::GetAtt": ["BooksTable", "Arn"]}
        Action: "dynmodb:getItem"

  calculateTotal:
    handler: functions/calculateTotal.handler


# you can add CloudFormation resource templates here
resources:
  Resources:
    BooksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: bookTable
        KeySchema:
          - AttributeName: bookId
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: bookId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST

      
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
